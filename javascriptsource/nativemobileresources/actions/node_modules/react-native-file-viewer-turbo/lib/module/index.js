"use strict";

import { NativeModules, NativeEventEmitter } from 'react-native';
import { createRef } from 'react';

// @ts-expect-error
const isTurboModuleEnabled = global.__turboModuleProxy != null;
const FileViewerTurbo = isTurboModuleEnabled ? require('./NativeFileViewerTurbo').default : NativeModules.FileViewerTurbo;
const eventEmitter = new NativeEventEmitter(FileViewerTurbo);
const dismissListener = /*#__PURE__*/createRef();
export async function open(path, options = {}) {
  const {
    onDismiss,
    ...nativeOptions
  } = options;
  try {
    dismissListener.current = eventEmitter.addListener('onViewerDidDismiss', () => {
      onDismiss?.();
      dismissListener.current?.remove();
    });
    await FileViewerTurbo.open(normalize(path), nativeOptions);
  } catch (error) {
    throw error;
  }
}
function normalize(path) {
  const filePrefix = 'file://';
  if (path.startsWith(filePrefix)) {
    path = path.substring(filePrefix.length);
    try {
      path = decodeURI(path);
    } catch (e) {}
  }
  return path;
}
//# sourceMappingURL=index.js.map