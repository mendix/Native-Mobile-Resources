// This file was generated by Mendix Studio Pro.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
import { Big } from "big.js";

// BEGIN EXTRA CODE
// END EXTRA CODE

/**
 * @param {string} attributeName
 * @param {MxObject[]} objectList
 * @returns {Promise.<boolean>}
 */
export async function LocalStorageRestoreAttributeList(attributeName, objectList) {
	// BEGIN USER CODE
    if (!objectList || !objectList.length) {
        return false;
    }

    if (!attributeName) {
        throw new TypeError("Input parameter 'Attribute name' is required");
    }
    
    if (!objectList[0].has(attributeName)) {
        const entity = objectList[0].getEntity();
        throw new TypeError(`Entity '${entity}' does not have an attribute named '${attributeName}'`);
    }

    const AsyncStorage = require("react-native").AsyncStorage;
    const storeName = `${objectList[0].getEntity()}.${attributeName}`;
    
    AsyncStorage.getItem(storeName)
        .then(store => {
            if (!store) {
                return false;
            }
            const currentValue = JSON.parse(store);
            objectList.forEach(object => {
                const value = currentValue[object.getGuid()];
                if (value !== undefined) {
                    object.set(attributeName, value);
                }
            });
            return true;
        });
	// END USER CODE
}
